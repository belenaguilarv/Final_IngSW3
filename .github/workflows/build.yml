name: CI/CD workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Verify Docker Compose file
        run: ls -l docker-compose.yml

      - name: Build and run Docker Compose
        run: docker-compose up -d
        
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        working-directory: backend
        run: |
          PORT=4001 npm install mocha
          PORT=4001 npm run test

  build_and_push:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      - name: Build and push database Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./database
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/database:latest   

  google_cloud_publish:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to GCR
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/keyfile.json
          gcloud auth activate-service-account --key-file=/tmp/keyfile.json
          gcloud auth configure-docker gcr.io

      - name: Tag and push Docker images to GCR
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/database:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/database:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/database:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest

          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/database:latest
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
  
  cloud_implementation:
    needs: google_cloud_publish
    runs-on: ubuntu-latest
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Google Cloud project and authenticate
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/keyfile.json
          gcloud auth activate-service-account --key-file=/tmp/keyfile.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region us-central1

      - name: Deploy database service to Cloud Run
        run: |
          gcloud run deploy finalingsw3-database \
            --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/database:latest \
            --platform=managed \
            --allow-unauthenticated \
            --memory=4G \
            --cpu=2 \
            --port=3306

      - name: Deploy frontend service to Cloud Run
        run: |
          gcloud run deploy finalingsw3-frontend \
            --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest \
            --platform=managed \
            --allow-unauthenticated \
            --memory=4G \
            --cpu=2 \
            --port=3000

      - name: Deploy backend service to Cloud Run
        run: |
          gcloud run deploy finalingsw3-backend \
            --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest \
            --platform=managed \
            --allow-unauthenticated \
            --memory=4G \
            --cpu=2 \
            --port=8080
            
